<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC   
    "-//mybatis.org//DTD Mapper 3.0//EN"  
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.markbro.dzd.base.orgTree.dao.OrgTreeMapper">
	<!--<sql id="addColumns">orgid,id,parentid,type,sjbmid,lxid,name,py,sort,bz,createTime,updateTime,createBy,updateBy,available,deleted</sql> -->
	<!--<sql id="updateColumns">orgid,parentid,type,sjbmid,lxid,name,py,sort,bz,updateTime,createBy,updateBy,available,deleted</sql> -->
	<cache type="com.markbro.asoiaf.mybatis.cache.AsoiafCache" eviction="org.apache.ibatis.cache.decorators.LruCache" readOnly="true" size="1024" flushInterval="3600000"/>
	<sql id="allColumns">orgid,id,parentid,type,sjbmid,lxid,name,py,sort,bz,createTime,updateTime,createBy,updateBy,available,deleted</sql>
	<!--如果实体类中属性名与数据库表中的字段名不一致就需要用resultMap映射-->
	<resultMap id="treeResult" type="com.markbro.dzd.base.orgTree.bean.OrgTree">
		<result property="orgid" column="orgid" />
		<result property="id" column="id" />
		<result property="parentid" column="parentid" />
		<result property="type" column="type" />
		<result property="sjbmid" column="sjbmid" />
		<result property="lxid" column="lxid" />
		<result property="name" column="name" />
		<result property="py" column="py" />
		<result property="sort" column="sort" />
		<result property="bz" column="bz" />
		<result property="createTime" column="createTime" />
		<result property="updateTime" column="updateTime" />
		<result property="createBy" column="createBy" />
		<result property="updateBy" column="updateBy" />
		<result property="available" column="available" />
		<result property="deleted" column="deleted" />
	</resultMap>
    <sql id="Tree_Where_Clause">
        <if test="orgid != null and orgid != ''">
				AND orgid = #{orgid}
		</if>
			<if test="id != null and id != ''">
				AND id = #{id}
		</if>
			<if test="parentid != null and parentid != ''">
				AND parentid = #{parentid}
		</if>
			<if test="type != null and type != ''">
				AND type = #{type}
		</if>
			<if test="sjbmid != null and sjbmid != ''">
				AND sjbmid = #{sjbmid}
		</if>
			<if test="lxid != null and lxid != ''">
				AND lxid = #{lxid}
		</if>
			<if test="name != null and name != ''">
				AND name = #{name}
		</if>
			<if test="py != null and py != ''">
				AND py = #{py}
		</if>
			<if test="sort != null and sort != ''">
				AND sort = #{sort}
		</if>
			<if test="bz != null and bz != ''">
				AND bz = #{bz}
		</if>
			<if test="createTime_start != null and createTime_start != ''">
				<![CDATA[   and DATE_FORMAT(createTime, '%Y-%m-%d')>=  DATE_FORMAT(#{createTime_start}, '%Y-%m-%d')   ]]>
		</if>
			<if test="createTime_end != null and createTime_end != ''">
				<![CDATA[   and DATE_FORMAT(createTime, '%Y-%m-%d')<  ADDDATE(DATE_FORMAT(#{createTime_end}, '%Y-%m-%d'),1)   ]]>
		</if>
			<if test="updateTime != null and updateTime != ''">
				AND updateTime = #{updateTime}
		</if>
			<if test="createBy != null and createBy != ''">
				AND createBy = #{createBy}
		</if>
			<if test="updateBy != null and updateBy != ''">
				AND updateBy = #{updateBy}
		</if>
			<if test="available != null and available != ''">
				AND available = #{available}
		</if>
			<if test="deleted != null and deleted != ''">
				AND deleted = #{deleted}
		</if>
			
    </sql>
    <select id="get"  resultMap="treeResult">
        select <include refid="allColumns"/>
        from org_tree
        where
        id =#{id}
    </select>
	<select id="getByLxidAndType"  resultMap="treeResult" parameterType="java.lang.String">
		select <include refid="allColumns"/>
		from org_tree
		where
		lxid =#{lxid} and type=#{type} and deleted=0
	</select>

    <select id="getMap"  resultType="java.util.Map">
            select <include refid="allColumns"/>
            from org_tree
            where
            id =#{id}
    </select>
    <insert id="add" useGeneratedKeys="true" keyProperty="id" parameterType="com.markbro.dzd.base.orgTree.bean.OrgTree" flushCache="true">
    	insert into org_tree(orgid,id,parentid,type,sjbmid,lxid,name,py,sort,bz,createTime,updateTime,createBy,updateBy,available,deleted)
    	values (#{orgid},#{id},#{parentid},#{type},#{sjbmid},#{lxid},#{name},#{py},#{sort},#{bz},now(),now(),#{createBy},#{updateBy},1,0)
    </insert>
    <insert id="addByMap" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.Map" flushCache="true">
    	insert into org_tree(orgid,id,parentid,type,sjbmid,lxid,name,py,sort,bz,createTime,updateTime,createBy,updateBy,available,deleted)
    	values (#{orgid},#{id},#{parentid},#{type},#{sjbmid},#{lxid},#{name},#{py},#{sort},#{bz},now(),now(),#{createBy},#{updateBy},1,0)
    </insert>
    <insert id="addBatch" flushCache="true">
        insert into org_tree (orgid,id,parentid,type,sjbmid,lxid,name,py,sort,bz,createTime,updateTime,createBy,updateBy,available,deleted)
        values
        <foreach collection="list" item="item" separator="," >
        	(#{item.orgid},#{item.id},#{item.parentid},#{item.type},#{item.sjbmid},#{item.lxid},#{item.name},#{item.py},#{item.sort},#{item.bz},now(),now(),#{item.createBy},#{item.updateBy},1,0)
        </foreach>
    </insert>
    <update id="update" parameterType="com.markbro.dzd.base.orgTree.bean.OrgTree" flushCache="true">
    	update org_tree 
    	<set>
    		<if test="orgid != null">orgid=#{orgid},</if>
			<if test="parentid != null">parentid=#{parentid},</if>
			<if test="type != null">type=#{type},</if>
			<if test="sjbmid != null">sjbmid=#{sjbmid},</if>
			<if test="lxid != null">lxid=#{lxid},</if>
			<if test="name != null">name=#{name},</if>
			<if test="py != null">py=#{py},</if>
			<if test="sort != null">sort=#{sort},</if>
			<if test="bz != null">bz=#{bz},</if>
			updateTime=now(),
			<if test="createBy != null">createBy=#{createBy},</if>
			<if test="updateBy != null">updateBy=#{updateBy},</if>
			<if test="available != null">available=#{available},</if>
			<if test="deleted != null">deleted=#{deleted},</if>
			
    	</set>
    	 where
    	id =#{id}
    </update>
	<update id="updateByMap" parameterType="map" flushCache="true">
        update org_tree
        <set>
            <if test="orgid != null">orgid=#{orgid},</if>
			<if test="parentid != null">parentid=#{parentid},</if>
			<if test="type != null">type=#{type},</if>
			<if test="sjbmid != null">sjbmid=#{sjbmid},</if>
			<if test="lxid != null">lxid=#{lxid},</if>
			<if test="name != null">name=#{name},</if>
			<if test="py != null">py=#{py},</if>
			<if test="sort != null">sort=#{sort},</if>
			<if test="bz != null">bz=#{bz},</if>
			updateTime=now(),
			<if test="createBy != null">createBy=#{createBy},</if>
			<if test="updateBy != null">updateBy=#{updateBy},</if>
			<if test="available != null">available=#{available},</if>
			<if test="deleted != null">deleted=#{deleted},</if>
			
        </set>
        where
        id =#{id}
    </update>
	<update id="updateByMapBatch" parameterType="map" flushCache="true">
         update org_tree
         <set>
         <if test="orgid != null">orgid=#{orgid},</if>
			<if test="parentid != null">parentid=#{parentid},</if>
			<if test="type != null">type=#{type},</if>
			<if test="sjbmid != null">sjbmid=#{sjbmid},</if>
			<if test="lxid != null">lxid=#{lxid},</if>
			<if test="name != null">name=#{name},</if>
			<if test="py != null">py=#{py},</if>
			<if test="sort != null">sort=#{sort},</if>
			<if test="bz != null">bz=#{bz},</if>
			updateTime=now(),
			<if test="createBy != null">createBy=#{createBy},</if>
			<if test="updateBy != null">updateBy=#{updateBy},</if>
			<if test="available != null">available=#{available},</if>
			<if test="deleted != null">deleted=#{deleted},</if>
			
         </set>
         where
         id in
         <foreach collection="ids" item = "id" open="(" separator="," close=")">
         #{id}
         </foreach>
    </update>
  	<delete id="delete" flushCache="true">
      	delete  from org_tree where id =#{id}
    </delete>
  	<delete id="deleteBatch" flushCache="true">
      	delete  from org_tree where id in
        <foreach collection="array" item = "ids" open="(" separator="," close=")">
        #{ids}
        </foreach>
    </delete>
    <select id="find" resultMap="treeResult" parameterType="java.util.Map">
        SELECT <include refid="allColumns"/> FROM org_tree
        <where>
            and available=1
            and deleted=0
            <include refid="Tree_Where_Clause"/>
        </where>
    </select>
    <select id="findByMap" resultMap="treeResult"  parameterType="map" >
   		SELECT <include refid="allColumns"/> FROM org_tree
   		<where>
   		    <if test="orgid != null and orgid != ''">
				AND orgid = #{orgid}
			</if>
			<if test="id != null and id != ''">
				AND id = #{id}
			</if>
			<if test="parentid != null and parentid != ''">
				AND parentid = #{parentid}
			</if>
			<if test="type != null and type != ''">
				AND type = #{type}
			</if>
			<if test="sjbmid != null and sjbmid != ''">
				AND sjbmid = #{sjbmid}
			</if>
			<if test="lxid != null and lxid != ''">
				AND lxid = #{lxid}
			</if>
			<if test="name != null and name != ''">
				AND name = #{name}
			</if>
			<if test="py != null and py != ''">
				AND py = #{py}
			</if>
			<if test="sort != null and sort != ''">
				AND sort = #{sort}
			</if>
			<if test="bz != null and bz != ''">
				AND bz = #{bz}
			</if>
			<if test="createTime_start != null and createTime_start != ''">
				<![CDATA[   and DATE_FORMAT(createTime, '%Y-%m-%d')>=  DATE_FORMAT(#{createTime_start}, '%Y-%m-%d')   ]]>
			</if>
			<if test="createTime_end != null and createTime_end != ''">
				<![CDATA[   and DATE_FORMAT(createTime, '%Y-%m-%d')<  ADDDATE(DATE_FORMAT(#{createTime_end}, '%Y-%m-%d'),1)   ]]>
			</if>
			<if test="updateTime != null and updateTime != ''">
				AND updateTime = #{updateTime}
			</if>
			<if test="createBy != null and createBy != ''">
				AND createBy = #{createBy}
			</if>
			<if test="updateBy != null and updateBy != ''">
				AND updateBy = #{updateBy}
			</if>
			<if test="available != null and available != ''">
				AND available = #{available}
			</if>
			<if test="deleted != null and deleted != ''">
				AND deleted = #{deleted}
			</if>
			
   		</where>
   	</select>

	<select id="findByOrgid" resultType="com.markbro.dzd.base.orgTree.bean.OrgTree">
		select *
			from org_tree
		<where>
			orgid=#{orgid}
			and deleted=0
			and available=1
		</where>
	</select>
	<select id="findByParentid" resultType="com.markbro.dzd.base.orgTree.bean.OrgTree">
		select *
			from org_tree
		<where>
			parentid=#{parentid}
			and deleted=0
			and available=1
		</where>
	</select>

	<select id="findByParentidCount" resultType="java.lang.Integer">
		select count(1)
		from org_tree
		<where>
			parentid=#{parentid}
			and deleted=0
			and available=1
			and orgid=#{orgid}
		</where>
	</select>

	<update id="deleteByLxidAndType"  flushCache="true" parameterType="java.lang.String">
		update org_tree
		set deleted=1
		where lxid=#{lxid} and type=#{type} and deleted=0
	</update>

</mapper>
